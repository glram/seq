language: cpp

jobs:
  include:
    - os: linux
    - os: osx

addons:
  apt:
    update: true
    packages:
      - libsnappy-dev
      - binutils-dev
      - libomp-dev
      - libunwind-dev
      - texinfo
      - python3
      - python3-pip
      - python3-setuptools
      - python-sphinx
      - doxygen
      - ocaml
  homebrew:
    update: true
    packages:
      - snappy
      - binutils
      - libomp
      - texinfo
      - python3
      - sphinx-doc
      - doxygen
      - cmake
      - wget
      - ocaml
      - ocamlbuild

before_install:
  # build and cache LLVM/Tapir:
  - |
    if [[ -z "$(ls -A ${TRAVIS_BUILD_DIR}/Tapir-LLVM)" ]]; then
      git clone -b release_60-release https://github.com/seq-lang/Tapir-LLVM ${TRAVIS_BUILD_DIR}/Tapir-LLVM
      mkdir ${TRAVIS_BUILD_DIR}/Tapir-LLVM/build
      cd ${TRAVIS_BUILD_DIR}/Tapir-LLVM/build
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        export LLVM_BINUTILS_INCDIR=/usr/include
      elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
        export LLVM_BINUTILS_INCDIR=/usr/local/opt/binutils/include
      fi
      cmake .. -DLLVM_INCLUDE_TESTS=OFF \
               -DLLVM_ENABLE_RTTI=ON \
               -DCMAKE_BUILD_TYPE=Release \
               -DLLVM_TARGETS_TO_BUILD=host
      cmake --build . --config Release
      cd -
    fi

  # fix Python:
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then brew link --overwrite python3; fi

install:
  # install htslib:
  - wget -c https://github.com/samtools/htslib/releases/download/1.10.2/htslib-1.10.2.tar.bz2 -O - | tar -xj
  - cd htslib-1.10.2
  - ./configure CFLAGS="-fPIC" --disable-libcurl
  - make
  - sudo make install
  - cd -

  # install dependencies for docs:
  - sudo pip3 install --upgrade pip
  - sudo pip3 install wheel sphinx sphinx-rtd-theme breathe exhale

before_script:
  - export PYTHONPATH="${TRAVIS_BUILD_DIR}/test/python"
  - export LDFLAGS="-L/usr/local/lib"
  - export SEQ_PYTHON=$(python3 test/python/find-python-library.py)
  - export SEQ_PATH="${TRAVIS_BUILD_DIR}/stdlib"
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then sudo ldconfig; fi

script:
  - mkdir build
  - |
    (cd build && cmake .. -DCMAKE_BUILD_TYPE=Release \
                          -DSEQ_THREADED=ON \
                          -DLLVM_DIR=`${TRAVIS_BUILD_DIR}/Tapir-LLVM/build/bin/llvm-config --cmakedir` \
                          -DCMAKE_C_COMPILER=clang \
                          -DCMAKE_CXX_COMPILER=clang++)
  - cmake --build build --config Release
  - build/seqtest
  - build/seqc test/core/helloworld.seq
  - (cd docs/sphinx && make html 2> /dev/null)

before_deploy:
  - export SEQ_BUILD_ARCHIVE=seq-`uname -s | awk '{print tolower($0)}'`-`uname -m`.tar.gz
  - export SEQ_STDLIB_ARCHIVE=seq-stdlib.tar.gz
  - tar -czf ${SEQ_BUILD_ARCHIVE} build
  - tar -czf ${SEQ_STDLIB_ARCHIVE} stdlib

deploy:
  - provider: releases
    token: $GITHUB_TOKEN
    file:
      - ${SEQ_BUILD_ARCHIVE}
      - ${SEQ_STDLIB_ARCHIVE}
    skip_cleanup: true
    on:
      repo: seq-lang/seq
      tags: true
  - provider: pages
    local_dir: docs/sphinx/_build/html
    target_branch: gh-pages
    fqdn: seq-lang.org
    token: $GITHUB_TOKEN
    committer_from_gh: true
    keep_history: false
    skip_cleanup: true
    on:
      branch: master
      condition: $TRAVIS_OS_NAME = linux

cache:
  timeout: 1000
  directories:
    - Tapir-LLVM

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/8bcb19a2bb1bab2a3b1b
    on_success: change
    on_failure: always
    on_start: never
    on_cancel: always
    on_error: always
  email: false
